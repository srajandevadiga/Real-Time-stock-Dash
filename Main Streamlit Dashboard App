import streamlit as st
import pandas as pd
import plotly.graph_objs as go
import yfinance as yf
from datetime import datetime, timedelta

st.set_page_config(layout="wide", page_title="📈 Real-Time Stock Dashboard")
st.title("📈 Real-Time Stock Market Dashboard")

# Sidebar Inputs
symbol = st.sidebar.text_input("Enter Stock Symbol (e.g., AAPL, TSLA):", "AAPL")
start_date = st.sidebar.date_input("Start Date", datetime.today() - timedelta(days=60))
end_date = st.sidebar.date_input("End Date", datetime.today())

@st.cache_data(ttl=60)
def get_data(ticker, start, end):
    data = yf.download(ticker, start=start, end=end)
    return data

df = get_data(symbol, start_date, end_date)

if not df.empty:
    # Technical Indicators
    df['SMA20'] = df['Close'].rolling(window=20).mean()
    df['SMA50'] = df['Close'].rolling(window=50).mean()

    delta = df['Close'].diff()
    gain = delta.where(delta > 0, 0)
    loss = -delta.where(delta < 0, 0)
    avg_gain = gain.rolling(window=14).mean()
    avg_loss = loss.rolling(window=14).mean()
    rs = avg_gain / avg_loss
    df['RSI'] = 100 - (100 / (1 + rs))

    st.subheader(f"Stock Data for {symbol.upper()}")
    st.dataframe(df.tail())

    # Line Chart with Moving Averages
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=df.index, y=df['Close'], mode='lines', name='Close Price'))
    fig.add_trace(go.Scatter(x=df.index, y=df['SMA20'], mode='lines', name='SMA 20', line=dict(dash='dot')))
    fig.add_trace(go.Scatter(x=df.index, y=df['SMA50'], mode='lines', name='SMA 50', line=dict(dash='dash')))
    fig.update_layout(title=f"{symbol.upper()} Closing Price with SMA", xaxis_title="Date", yaxis_title="Price (USD)")
    st.plotly_chart(fig, use_container_width=True)

    # Candlestick Chart
    st.subheader("📊 Candlestick Chart")
    fig_candle = go.Figure(data=[go.Candlestick(
        x=df.index,
        open=df['Open'],
        high=df['High'],
        low=df['Low'],
        close=df['Close']
    )])
    fig_candle.update_layout(title=f"{symbol.upper()} Candlestick Chart", xaxis_title="Date")
    st.plotly_chart(fig_candle, use_container_width=True)

    # RSI Plot
    st.subheader("📉 RSI (Relative Strength Index)")
    fig_rsi = go.Figure()
    fig_rsi.add_trace(go.Scatter(x=df.index, y=df['RSI'], mode='lines', name='RSI', line=dict(color='orange')))
    fig_rsi.add_hline(y=70, line_dash="dot", line_color="red")
    fig_rsi.add_hline(y=30, line_dash="dot", line_color="green")
    fig_rsi.update_layout(yaxis_title="RSI", xaxis_title="Date")
    st.plotly_chart(fig_rsi, use_container_width=True)

else:
    st.warning("⚠️ No data found. Please check the stock symbol or date range.")
